import "@std"

def enum Color {
    Red,
    Green,
    Blue
}

def enum Direction {
    North,
    South,
    East,
    West
}

def print_color(color_value: i32) -> void {
    std.print("Color value: ");
    std.println(std.to_string(color_value));
}

def main() -> i32 {
    std.println("=== Enum Usage with Integer Values ===");
    std.println("");
    
    // For now, use enum values as integers
    def red_value: i32 = 0;    // Color.Red
    def green_value: i32 = 1;  // Color.Green
    def north_value: i32 = 0;  // Direction.North
    def east_value: i32 = 2;   // Direction.East
    
    std.println("Testing color values:");
    std.print("Red (0): ");
    print_color(red_value);
    std.print("Green (1): ");
    print_color(green_value);
    
    std.println("");
    std.println("Direction values:");
    std.print("North: ");
    std.println(std.to_string(north_value));
    std.print("East: ");
    std.println(std.to_string(east_value));
    
    std.println("");
    std.println("âœ… Enum usage working with integer values!");
    std.println("ðŸŽ¯ Next: Implement enum.Variant syntax");
    
    return 0;
}